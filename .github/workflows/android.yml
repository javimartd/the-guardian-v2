name: android CI

# when this workflow should be executed.
on:
  push:
    branches:
      - main
      - develop
      - 'feat/**'
      - 'release/**'
    tags:
      - 'v*'
  pull_request:
    types:
      - opened
      - reopened
  schedule:
    - cron: '0 11 * * 1'
  # this event makes sure that the user can manually trigger this workflow.
  workflow_dispatch:

jobs:

  android-workflow:

    # runner on which the job will execute different steps (environment).
    runs-on: ubuntu-latest

    env:
      APP_NAME: the-guardian
      RUN_NUMBER: ${{github.run_number}}
      THE_GUARDIAN_API_KEY: ${{ secrets.THE_GUARDIAN_API_KEY }}
      RETENTION_DAYS: 10
      GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

    steps:

      # run defines the command that should be executed in the command line.
      - run: echo "Job automatically triggered by a ${{ github.event_name }} event on branch ${{ github.ref }}"

      # step name
      - name: Checkout the code
        # uses is a keyword to use an action.
        uses: actions/checkout@v4 # https://github.com/marketplace/actions/checkout

      # https://github.com/marketplace/actions/authenticate-to-google-cloud
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: set up JDK 17
        uses: actions/setup-java@v2 # https://github.com/marketplace/actions/setup-java-jdk
        # with is a keyword to take various keys that configure the action.
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: gradle

      - name: Access THE_GUARDIAN_API_KEY
        run: echo THE_GUARDIAN_API_KEY=\"$THE_GUARDIAN_API_KEY\" > ./local.properties

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Assemble Prod debug build
        run: ./gradlew assembleProdDebug

      - name: Assemble Mock debug build
        run: ./gradlew assembleMockDebug

      - name: Run unit tests
        run: ./gradlew testProdDebugUnitTest

      - name: Firebase App Distribution
        run: ./gradlew appDistributionUploadProdDebug --releaseNotesFile=release_notes.txt --groups=testers

      - name: Upload unit tests artifact
        uses: actions/upload-artifact@v2 # https://github.com/marketplace/actions/upload-a-build-artifact
        with:
          name: unit-tests-results # job artifact name
          path: app/build/reports/tests/testProdDebugUnitTest/index.html # job artifact to upload
          retention-days: ${{ env.RETENTION_DAYS }}

      - name: Upload .apk artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.APP_NAME }}-debug-${{ env.RUN_NUMBER }}
          path: app/build/outputs/apk/prod/debug/app-prod-debug.apk
          retention-days: ${{ env.RETENTION_DAYS }}

      - name: Run code analysis (Lint)
        run: ./gradlew lintProdDebug

      - name: Upload code analysis artifact
        uses: actions/upload-artifact@v2
        with:
          name: lint-results
          path: app/build/reports/lint-results-prodDebug.html
          retention-days: ${{ env.RETENTION_DAYS }}
